name: Deploy to Server

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때 실행

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show repo info
        run: echo "Repo is $GITHUB_REPOSITORY"

      - name: Set up SSH and Deploy
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_DIR: ${{ secrets.DEPLOY_DIR }}
        run: |
          echo "🔐 DEPLOY_KEY length: ${#DEPLOY_KEY}"
          echo "🌐 DEPLOY_HOST length: ${#DEPLOY_HOST}"
          echo "📁 DEPLOY_DIR length: ${#DEPLOY_DIR}"

          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/github_deploy_key
          chmod 600 ~/.ssh/github_deploy_key

          PROJECT_NAME=$(basename $GITHUB_REPOSITORY)

          ssh -i ~/.ssh/github_deploy_key -o StrictHostKeyChecking=no $DEPLOY_HOST << EOF
              set -ex

              echo "✅ DEPLOY_DIR: $DEPLOY_DIR"
              mkdir -p $DEPLOY_DIR
              cd $DEPLOY_DIR

              if [ ! -d "$PROJECT_NAME" ]; then
              echo "📦 프로젝트 디렉토리가 없으므로 git clone 실행"
              git clone https://github.com/${GITHUB_REPOSITORY}.git
              fi

              cd $PROJECT_NAME

              echo "🔄 git pull 실행"
              git pull origin main

              echo "🧪 가상환경 활성화 및 의존성 설치"
              if [ ! -d "venv" ]; then
              python3 -m venv venv
              fi
              source venv/bin/activate
              pip install --upgrade pip
              pip install -r requirements.txt
          EOF
